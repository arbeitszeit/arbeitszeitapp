from _typeshed import Incomplete

from . import cbook as cbook
from ._enums import CapStyle as CapStyle
from ._enums import JoinStyle as JoinStyle
from .artist import Artist as Artist
from .artist import allow_rasterization as allow_rasterization
from .cbook import STEP_LOOKUP_MAP as STEP_LOOKUP_MAP
from .cbook import ls_mapper as ls_mapper
from .cbook import ls_mapper_r as ls_mapper_r
from .markers import CARETDOWN as CARETDOWN
from .markers import CARETDOWNBASE as CARETDOWNBASE
from .markers import CARETLEFT as CARETLEFT
from .markers import CARETLEFTBASE as CARETLEFTBASE
from .markers import CARETRIGHT as CARETRIGHT
from .markers import CARETRIGHTBASE as CARETRIGHTBASE
from .markers import CARETUP as CARETUP
from .markers import CARETUPBASE as CARETUPBASE
from .markers import TICKDOWN as TICKDOWN
from .markers import TICKLEFT as TICKLEFT
from .markers import TICKRIGHT as TICKRIGHT
from .markers import TICKUP as TICKUP
from .markers import MarkerStyle as MarkerStyle
from .path import Path as Path
from .transforms import Bbox as Bbox
from .transforms import BboxTransformTo as BboxTransformTo
from .transforms import TransformedPath as TransformedPath

def segment_hits(cx, cy, x, y, radius): ...

class Line2D(Artist):
    lineStyles: Incomplete
    drawStyles: Incomplete
    drawStyleKeys: Incomplete
    markers: Incomplete
    filled_markers: Incomplete
    fillStyles: Incomplete
    zorder: int
    pickradius: Incomplete
    ind_offset: int
    def __init__(
        self,
        xdata,
        ydata,
        *,
        linewidth: Incomplete | None = None,
        linestyle: Incomplete | None = None,
        color: Incomplete | None = None,
        gapcolor: Incomplete | None = None,
        marker: Incomplete | None = None,
        markersize: Incomplete | None = None,
        markeredgewidth: Incomplete | None = None,
        markeredgecolor: Incomplete | None = None,
        markerfacecolor: Incomplete | None = None,
        markerfacecoloralt: str = "none",
        fillstyle: Incomplete | None = None,
        antialiased: Incomplete | None = None,
        dash_capstyle: Incomplete | None = None,
        solid_capstyle: Incomplete | None = None,
        dash_joinstyle: Incomplete | None = None,
        solid_joinstyle: Incomplete | None = None,
        pickradius: int = 5,
        drawstyle: Incomplete | None = None,
        markevery: Incomplete | None = None,
        **kwargs,
    ) -> None: ...
    def contains(self, mouseevent): ...
    def get_pickradius(self): ...
    def set_pickradius(self, pickradius) -> None: ...
    def get_fillstyle(self): ...
    stale: bool
    def set_fillstyle(self, fs) -> None: ...
    def set_markevery(self, every) -> None: ...
    def get_markevery(self): ...
    def set_picker(self, p) -> None: ...
    def get_bbox(self): ...
    def get_window_extent(self, renderer: Incomplete | None = None): ...
    def set_data(self, *args) -> None: ...
    def recache_always(self) -> None: ...
    def recache(self, always: bool = False) -> None: ...
    def set_transform(self, t) -> None: ...
    def draw(self, renderer) -> None: ...
    def get_antialiased(self): ...
    def get_color(self): ...
    def get_drawstyle(self): ...
    def get_gapcolor(self): ...
    def get_linestyle(self): ...
    def get_linewidth(self): ...
    def get_marker(self): ...
    def get_markeredgecolor(self): ...
    def get_markeredgewidth(self): ...
    def get_markerfacecolor(self): ...
    def get_markerfacecoloralt(self): ...
    def get_markersize(self): ...
    def get_data(self, orig: bool = True): ...
    def get_xdata(self, orig: bool = True): ...
    def get_ydata(self, orig: bool = True): ...
    def get_path(self): ...
    def get_xydata(self): ...
    def set_antialiased(self, b) -> None: ...
    def set_color(self, color) -> None: ...
    def set_drawstyle(self, drawstyle) -> None: ...
    def set_gapcolor(self, gapcolor) -> None: ...
    def set_linewidth(self, w) -> None: ...
    def set_linestyle(self, ls) -> None: ...
    def set_marker(self, marker) -> None: ...
    def set_markeredgecolor(self, ec) -> None: ...
    def set_markerfacecolor(self, fc) -> None: ...
    def set_markerfacecoloralt(self, fc) -> None: ...
    def set_markeredgewidth(self, ew) -> None: ...
    def set_markersize(self, sz) -> None: ...
    def set_xdata(self, x) -> None: ...
    def set_ydata(self, y) -> None: ...
    def set_dashes(self, seq) -> None: ...
    def update_from(self, other) -> None: ...
    def set_dash_joinstyle(self, s) -> None: ...
    def set_solid_joinstyle(self, s) -> None: ...
    def get_dash_joinstyle(self): ...
    def get_solid_joinstyle(self): ...
    def set_dash_capstyle(self, s) -> None: ...
    def set_solid_capstyle(self, s) -> None: ...
    def get_dash_capstyle(self): ...
    def get_solid_capstyle(self): ...
    def is_dashed(self): ...

class AxLine(Line2D):
    def __init__(self, xy1, xy2, slope, **kwargs) -> None: ...
    def get_transform(self): ...
    def draw(self, renderer) -> None: ...
    def get_xy1(self): ...
    def get_xy2(self): ...
    def get_slope(self): ...
    def set_xy1(self, x, y) -> None: ...
    def set_xy2(self, x, y) -> None: ...
    def set_slope(self, slope) -> None: ...

class VertexSelector:
    axes: Incomplete
    line: Incomplete
    cid: Incomplete
    ind: Incomplete
    def __init__(self, line) -> None: ...
    canvas: Incomplete
    def process_selected(self, ind, xs, ys) -> None: ...
    def onpick(self, event) -> None: ...

lineStyles: Incomplete
lineMarkers: Incomplete
drawStyles: Incomplete
fillStyles: Incomplete
